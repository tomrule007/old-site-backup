{"version":3,"sources":["webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/me/author.tsx","webpack:///./src/components/me/about-button.tsx","webpack:///./src/components/me/social-networks.tsx","webpack:///./src/components/me/calltoaction-button.tsx","webpack:///./src/components/layouts/index-layout.tsx","webpack:///./src/config.ts","webpack:///./src/stores/BlogPostStore.ts","webpack:///./src/components/blog-list/show-more-button.tsx","webpack:///./src/components/blog-list/blog-list-element.tsx","webpack:///./src/components/blog-list/blog-list.tsx","webpack:///./src/pages/index.tsx","webpack:///./src/theme.ts","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["StaticQueryContext","React","createContext","StaticQuery","props","react_default","a","createElement","Consumer","staticQueryData","data","query","render","children","propTypes","PropTypes","object","string","isRequired","func","me_author","_ref","author","react","Grid_default","container","justify","alignItems","direction","gatsby_link_default","to","Avatar_default","style","width","THEME","avatar","height","src","withPrefix","image","alt","name","color","title","fontSize","marginTop","marginBottom","desc","maxWidth","margin","textAlign","biography","about_button","textDecoration","Button_default","variant","marginRight","index","aboutButton","borderColor","backgroundColor","textTransform","social_networks","networks","listStyleType","map","networkUrl","key","display","verticalAlign","paddingRight","paddingLeft","react_social_icons","networkButton","fgColor","bgColor","target","url","calltoaction_button","padding","callToActionButton","viewBox","aria-hidden","fill","d","Mobile","react_responsive_default","Object","assign","Default","minWidth","HeaderArea","styles","backgroundImage","header","paddingTop","paddingBottom","site","siteMetadata","ContentArea","_ref2","id","flexGrow","layout","cardSectionMaxWidth","IndexLayout","_ref3","index_layout_HeaderArea","index_layout_ContentArea","index_layout","_ref4","gatsby_browser_entry_StaticQuery","index_layout_Default","index_layout_IndexLayout","index_layout_Mobile","_1460482536","CONFIG","countOfInitiallyShownPosts","countOfPostsDynamicallyAdded","offsetHeightToTriggerLoading","blogPostStore","_class","BlogPostStore","initializerDefineProperty_default","this","_descriptor","prototype","add","postsToShow","applyDecoratedDescriptor_default","observable","configurable","enumerable","writable","initializer","action","getOwnPropertyDescriptor","show_more_button","onClickHandler","onClick","blogPost","showMoreButton","borderWidth","borderStyle","blog_list_element","Card_default","CardActionArea_default","slug","CardHeader_default","blogListElement","textShadow","charAt","toUpperCase","subheader","date","coverFluid","gatsby_image_default","fluid","CardContent_default","Typography_default","component","description","BlogListDesktop","observer","ticking","handleScroll","_this","requestAnimationFrame","update","document","documentElement","offsetHeight","window","scrollY","innerHeight","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","minHeight","posts","slice","node","fields","frontmatter","cover","childImageSharp","BlogListMobile","handleUpdate","totalCount","BlogList","blog_list_Default","blog_list_BlogListDesktop","blog_list_Mobile","blog_list_BlogListMobile","Index","allMarkdownRemark","edges","e","blog_list","cardMaxWidth","fabButton","aboutPage","m","module","exports","require","default","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape"],"mappings":"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","file":"component---src-pages-index-tsx-e7ead3796146fe82e398.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import * as React from \"react\"\nimport { withPrefix, Link } from \"gatsby\"\n\nimport Avatar from \"@material-ui/core/Avatar\"\nimport Grid from \"@material-ui/core/Grid\"\nimport THEME from \"../../theme\"\n\ninterface IProps {\n  author: {\n    name: string\n    image: string\n    biography: string\n  }\n}\n\nexport default ({ author }: IProps) => {\n  return (\n    <Grid\n      container={true}\n      justify=\"center\"\n      alignItems=\"center\"\n      direction={\"column\"}\n    >\n      <Link to=\"/\">\n        <Avatar\n          style={{\n            alignItems: \"baseline\",\n            width: THEME.author.avatar.width,\n            height: THEME.author.avatar.height,\n          }}\n          src={withPrefix(author.image)}\n          alt={author.name}\n        />\n      </Link>\n      <h1\n        style={{\n          color: THEME.author.title.color,\n          fontSize: THEME.author.title.fontSize,\n          marginTop: 20,\n          marginBottom: 20,\n        }}\n      >\n        {author.name}\n      </h1>\n      <p\n        style={{\n          color: THEME.author.desc.color,\n          fontSize: THEME.author.desc.fontSize,\n          maxWidth: THEME.author.desc.maxWidth,\n          margin: \"auto\",\n          marginBottom: 20,\n          textAlign: \"center\",\n        }}\n      >\n        {author.biography}\n      </p>\n    </Grid>\n  )\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Button from \"@material-ui/core/Button\"\nimport THEME from \"../../theme\"\n\nexport default () => (\n  <div style={{ textAlign: \"right\" }}>\n    <Link to={`/about/`} style={{ textDecoration: \"none\" }}>\n      <Button\n        variant=\"outlined\"\n        style={{\n          marginRight: 30,\n          marginTop: 30,\n          color: THEME.index.aboutButton.color,\n          borderColor: THEME.index.aboutButton.borderColor,\n          backgroundColor: THEME.index.aboutButton.backgroundColor,\n          textTransform: \"none\",\n          width: THEME.index.aboutButton.width,\n        }}\n      >\n        About\n      </Button>\n    </Link>\n  </div>\n)\n","import * as React from \"react\"\nimport { SocialIcon } from \"react-social-icons\"\nimport THEME from \"../../theme\"\n\ninterface ISocialNetworks {\n  networks: string[]\n}\n\nexport default ({ networks }: ISocialNetworks) => (\n  <ul\n    style={{\n      textAlign: \"center\",\n      listStyleType: \"none\",\n      margin: \"40px 0 35px 0\",\n    }}\n  >\n    {networks.map(networkUrl => (\n      <li\n        key={networkUrl}\n        style={{\n          display: \"inline-block\",\n          verticalAlign: \"top\",\n          paddingRight: 5,\n          paddingLeft: 5,\n        }}\n      >\n        <SocialIcon\n          style={{\n            width: THEME.networkButton.width,\n            height: THEME.networkButton.height,\n          }}\n          fgColor={THEME.networkButton.color}\n          bgColor={THEME.networkButton.backgroundColor}\n          target=\"_blank\"\n          url={networkUrl}\n        />\n      </li>\n    ))}\n  </ul>\n)\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport THEME from \"../../theme\"\n\nexport default () => (\n  <div style={{ textAlign: \"center\", marginTop: 40 }}>\n    <Link to={`#children`}>\n      <span style={{ padding: 10 }}>\n        <svg\n          width={THEME.callToActionButton.width}\n          height={THEME.callToActionButton.height}\n          viewBox=\"0 0 24 24\"\n          aria-hidden=\"true\"\n          fill=\"white\"\n        >\n          <path d=\"M16.003 18.626l7.081-7.081L25 13.46l-8.997 8.998-9.003-9 1.917-1.916z\" />\n        </svg>\n      </span>\n    </Link>\n  </div>\n)\n","import * as React from \"react\"\nimport { StaticQuery, graphql } from \"gatsby\"\nimport Responsive from \"react-responsive\"\n\nimport Author from \"../me/author\"\nimport AboutButton from \"../me/about-button\"\nimport SocialNetworks from \"../me/social-networks\"\nimport CallToActionButton from \"../me/calltoaction-button\"\nimport THEME from \"../../theme\"\n\nconst Mobile = props => <Responsive {...props} maxWidth={767} />\nconst Default = props => <Responsive {...props} minWidth={768} />\n\ninterface IDataProps {\n  site: {\n    siteMetadata: {\n      author: {\n        name: string\n        image: string\n        biography: string\n      }\n      networks: string[]\n    }\n  }\n}\ninterface IIndexProps {\n  data: IDataProps\n  styles: {\n    paddingTop: number\n    paddingBottom: number\n  }\n  children: React.ReactNode\n}\n\ninterface IHeaderArea {\n  data: IDataProps\n  styles: {\n    paddingTop: number\n    paddingBottom: number\n  }\n}\n\nconst HeaderArea = ({ data, styles }: IHeaderArea) => (\n  <div\n    style={{\n      backgroundImage: THEME.index.header.backgroundImage,\n    }}\n  >\n    <AboutButton />\n    <div\n      style={{\n        paddingTop: styles.paddingTop,\n        paddingBottom: styles.paddingBottom,\n      }}\n    >\n      <Author author={data.site.siteMetadata.author} />\n      <SocialNetworks networks={data.site.siteMetadata.networks} />\n      <CallToActionButton />\n    </div>\n  </div>\n)\n\nconst ContentArea = ({ children }: { children: React.ReactNode }) => (\n  <div\n    id={\"children\"}\n    style={{\n      flexGrow: 1,\n      margin: \"0 auto\",\n      maxWidth: THEME.index.layout.cardSectionMaxWidth,\n      padding: 10,\n      paddingTop: 10,\n    }}\n  >\n    {children}\n  </div>\n)\n\nconst IndexLayout = ({ data, styles, children }: IIndexProps) => (\n  <div style={{ backgroundColor: THEME.index.layout.backgroundColor }}>\n    <HeaderArea data={data} styles={styles} />\n    <ContentArea children={children} />\n  </div>\n)\n\n/*\n      IndexLayoutWrapper\n*/\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            author {\n              name\n              image\n              biography\n            }\n            networks\n          }\n        }\n      }\n    `}\n    // tslint:disable-next-line:react-this-binding-issue\n    render={(data: IDataProps) => (\n      <>\n        <Default>\n          <IndexLayout\n            data={data}\n            styles={{ paddingTop: 75, paddingBottom: 75 }}\n          >\n            {children}\n          </IndexLayout>\n        </Default>\n        <Mobile>\n          <IndexLayout\n            data={data}\n            styles={{ paddingTop: 50, paddingBottom: 50 }}\n          >\n            {children}\n          </IndexLayout>\n        </Mobile>\n      </>\n    )}\n  />\n)\n","const CONFIG = {\n  countOfInitiallyShownPosts: 5,\n  countOfPostsDynamicallyAdded: 5,\n  offsetHeightToTriggerLoading: 20,\n}\n\nexport default CONFIG\n","import { observable, action } from \"mobx\"\nimport CONFIG from \"../config\"\n\nexport class BlogPostStore {\n  @observable postsToShow: number = CONFIG.countOfInitiallyShownPosts\n\n  @action\n  add() {\n    this.postsToShow += CONFIG.countOfPostsDynamicallyAdded\n  }\n}\n\nconst blogPostStore = new BlogPostStore()\nexport default blogPostStore\n","import * as React from \"react\"\nimport Button from \"@material-ui/core/Button\"\nimport THEME from \"../../theme\"\n\nexport default ({ onClickHandler }) => (\n  <div style={{ textAlign: \"center\" }}>\n    <Button\n      onClick={onClickHandler}\n      style={{\n        color: THEME.blogPost.showMoreButton.color,\n        borderColor: THEME.blogPost.showMoreButton.borderColor,\n        borderWidth: 1,\n        borderStyle: \"solid\",\n        backgroundColor: THEME.blogPost.showMoreButton.backgroundColor,\n        textTransform: \"none\",\n        width: THEME.blogPost.showMoreButton.width,\n      }}\n    >\n      Load More\n    </Button>\n  </div>\n)\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport Image, { FluidObject } from \"gatsby-image\"\n\nimport Card from \"@material-ui/core/Card\"\nimport CardActionArea from \"@material-ui/core/CardActionArea\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Avatar from \"@material-ui/core/Avatar\"\nimport CardHeader from \"@material-ui/core/CardHeader\"\nimport THEME from \"../../theme\";\n\ninterface IBlogListElement {\n  data: {\n    slug: string\n    date: string\n    title: string\n    description: string\n    coverFluid: FluidObject | null\n  }\n}\n\nexport default ({ data }: IBlogListElement) => (\n  <div style={{ marginTop: 25, marginBottom: 25 }}>\n    <Card>\n      <CardActionArea>\n        <Link\n          to={data.slug}\n          style={{\n            textDecoration: \"none\",\n            color: \"inherit\",\n          }}\n        >\n          <CardHeader\n            avatar={\n              <Avatar\n                style={{ \n                  backgroundColor: THEME.blogListElement.avatar.backgroundColor,\n                  color: THEME.blogListElement.avatar.color, \n                  textShadow: \"none\" \n                }}\n              >\n                {data.title.charAt(0).toUpperCase()}\n              </Avatar>\n            }\n            title={data.title}\n            subheader={data.date}\n          />\n          {data.coverFluid ? <Image fluid={data.coverFluid} /> : null}\n          <CardContent>\n            <Typography component=\"p\">{data.description}</Typography>\n          </CardContent>\n        </Link>\n      </CardActionArea>\n    </Card>\n  </div>\n)\n","import * as React from \"react\"\nimport { observer } from \"mobx-react\"\nimport blogPostStore from \"../../stores/BlogPostStore\"\nimport Responsive from \"react-responsive\"\nimport ShowMoreButton from \"./show-more-button\"\n\nimport BlogListElement from \"./blog-list-element\"\nimport CONFIG from \"../../config\"\nimport { FluidObject } from \"gatsby-image\"\n\nconst Mobile = props => <Responsive {...props} maxWidth={767} />\nconst Default = props => <Responsive {...props} minWidth={768} />\n\ninterface IProps {\n  posts: {\n    id: string\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      date: string\n      title: string\n      description: string\n      cover?: {\n        childImageSharp?: {\n          fluid: FluidObject | null\n        }\n      }\n    }\n  }[]\n  totalCount: number\n}\n\n/* \n  Desktop version automatically extends blog list \n  as soon as user scrolls near the bottom\n*/\n@observer\nclass BlogListDesktop extends React.Component<IProps, {}> {\n  ticking: boolean = false\n\n  update() {\n    const distanceToBottom =\n      document.documentElement.offsetHeight -\n      (window.scrollY + window.innerHeight)\n    if (distanceToBottom < CONFIG.offsetHeightToTriggerLoading) {\n      blogPostStore.add()\n    }\n    this.ticking = false\n  }\n\n  handleScroll = () => {\n    if (!this.ticking) {\n      this.ticking = true\n      requestAnimationFrame(() => this.update())\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener(`scroll`, this.handleScroll)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(`scroll`, this.handleScroll)\n  }\n\n  render() {\n    return (\n      <div style={{ minHeight: \"50vh\" }}>\n        {this.props.posts.slice(0, blogPostStore.postsToShow).map(node => (\n          <div key={node.id}>\n            <BlogListElement\n              data={{\n                slug: node.fields.slug,\n                date: node.frontmatter.date,\n                title: node.frontmatter.title,\n                description: node.frontmatter.description,\n                coverFluid:\n                  node.frontmatter.cover &&\n                  node.frontmatter.cover.childImageSharp\n                    ? node.frontmatter.cover.childImageSharp.fluid\n                    : null,\n              }}\n            />\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\n/* \n  Mobile version extends blog list as soon as user clicks \n  on a \"LoadMore\" button at the end of the list\n*/\n@observer\nclass BlogListMobile extends React.Component<IProps, {}> {\n  handleUpdate = () => {\n    blogPostStore.add()\n  }\n\n  render() {\n    return (\n      <div style={{ minHeight: \"50vh\" }}>\n        {this.props.posts.slice(0, blogPostStore.postsToShow).map(node => (\n          <div key={node.id}>\n            <BlogListElement\n              data={{\n                slug: node.fields.slug,\n                date: node.frontmatter.date,\n                title: node.frontmatter.title,\n                description: node.frontmatter.description,\n                coverFluid:\n                  node.frontmatter.cover &&\n                  node.frontmatter.cover.childImageSharp\n                    ? node.frontmatter.cover.childImageSharp.fluid\n                    : null,\n              }}\n            />\n          </div>\n        ))}\n        {this.props.totalCount > blogPostStore.postsToShow && (\n          <ShowMoreButton onClickHandler={this.handleUpdate} />\n        )}\n      </div>\n    )\n  }\n}\n\nconst BlogList = (props: IProps) => (\n  <>\n    <Default>\n      <BlogListDesktop posts={props.posts} totalCount={props.totalCount} />\n    </Default>\n    <Mobile>\n      <BlogListMobile posts={props.posts} totalCount={props.totalCount} />\n    </Mobile>\n  </>\n)\n\nexport default BlogList\n","import * as React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from \"../components/layouts/index-layout\"\nimport BlogList from \"../components/blog-list/blog-list\"\nimport { FluidObject } from \"gatsby-image\"\n\ninterface IProps {\n  data: {\n    allMarkdownRemark: {\n      totalCount: number\n      edges: {\n        node: {\n          id: string\n          frontmatter: {\n            title: string\n            date: string\n            description: string\n            cover: {\n              childImageSharp: {\n                fluid: FluidObject\n              }\n            }\n            fields: {\n              slug: string\n            }\n            excerpt: string\n          }\n        }\n      }[]\n    }\n  }\n}\n\nclass Index extends React.Component<IProps> {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges.map(\n      (e: any) => e.node\n    )\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n\n    return (\n      <Layout>\n        <BlogList posts={posts} totalCount={totalCount} />\n      </Layout>\n    )\n  }\n}\n\nexport default Index\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            description\n            cover {\n              childImageSharp {\n                ... on ImageSharp {\n                  fluid(maxWidth: 800, maxHeight: 400) {\n                    ...GatsbyImageSharpFluid_withWebp\n                  }\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","const THEME = {\n  blogPost: {\n    layout: {\n      cardMaxWidth: 1000,\n      backgroundColor: \"#eeeeee\",\n    },\n    showMoreButton: {\n      color: \"#059ce2\",\n      borderColor: \"#059ce2\",\n      backgroundColor: \"none\",\n      width: 130,\n    },\n  },\n  blogListElement: {\n    avatar: {\n      color: \"none\",\n      backgroundColor: \"#059ce2\",\n    },\n  },\n  index: {\n    layout: {\n      cardSectionMaxWidth: 800,\n      backgroundColor: \"#eeeeee\",\n    },\n    header: {\n      backgroundImage: \"linear-gradient(20deg, #039be5, #26a69a)\",\n    },\n    aboutButton: {\n      color: \"white\",\n      borderColor: \"white\",\n      backgroundColor: \"none\",\n      width: 100,\n    },\n  },\n  author: {\n    avatar: {\n      width: 70,\n      height: 70,\n    },\n    title: {\n      color: \"white\",\n      fontSize: 30,\n    },\n    desc: {\n      color: \"white\",\n      fontSize: 20,\n      maxWidth: 500,\n    },\n  },\n  callToActionButton: {\n    width: 25,\n    height: 25,\n  },\n  fabButton: {\n    color: \"#059ce2\",\n    backgroundColor: \"white\",\n  },\n  networkButton: {\n    color: \"white\",\n    backgroundColor: \"#333\",\n    width: 45,\n    height: 45,\n  },\n  aboutPage: {\n    layout: {\n      cardMaxWidth: 800,\n      backgroundColor: \"#eeeeee\",\n    },\n  },\n}\n\nexport default THEME\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}